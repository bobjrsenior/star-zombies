<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Shotgun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dist = 8;
x_change = 0;
y_change = 0;
angle = 0;


fire_delay = 0;
delay_counter = 0;

fire = false;
firing_count = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_Weapon_Parent.weapon == 2){
    visible = true;
    angle = obj_Player.image_angle;
    
    x_change = dist*cos(-2 * pi * (angle / 360));
    y_change = dist*sin(-2 * pi * (angle / 360));
    x_gun_change = (dist + 16)*cos(-2 * pi * (angle / 360));
    y_gun_change = (dist + 16)*sin(-2 * pi * (angle / 360));
    
    x = obj_Player.x + x_change;
    y = obj_Player.y + y_change;
    image_angle = angle;
    
    
    if(delay_counter &gt;= fire_delay &amp;&amp; mouse_check_button_pressed(mb_left)){
        fire = true;
        counter = 0;
        max_angle = angle + 15;
        min_angle = angle - 15;
        var bullet;
        while(counter &lt; 10){
            bullet = instance_create(x + x_gun_change, y + y_gun_change, obj_Bullet);
            angle_bullet = random_range(min_angle,max_angle);
            bullet.hsp = obj_Bullet.velocity * cos(-2 * pi * (angle_bullet / 360));
            bullet.vsp = obj_Bullet.velocity * sin(-2 * pi * (angle_bullet / 360));
            counter ++;
        }
        delay_counter = 0;
    }
    else if(delay_counter &lt; fire_delay &amp;&amp; !fire){
        delay_counter ++;
    }
    if(fire){
        counter = 0;
        firing_count ++;
        if(firing_count == 5){
            fire = false;
        }
        max_angle = angle + 15;
        min_angle = angle - 15;
        var bullet;
        while(counter &lt; 10){
            bullet = instance_create(x + x_gun_change, y + y_gun_change, obj_Bullet);
            angle_bullet = random_range(min_angle,max_angle);
            bullet.hsp = obj_Bullet.velocity * cos(-2 * pi * (angle_bullet / 360));
            bullet.vsp = obj_Bullet.velocity * sin(-2 * pi * (angle_bullet / 360));
            counter ++;
        }
        delay_counter = 0;
    }
    else{
        firing_count = 0;
    }
}
else{
    visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,8</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
